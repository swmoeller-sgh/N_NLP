Search.setIndex({"docnames": ["annotated_transformer", "index", "test_file"], "filenames": ["annotated_transformer.rst", "index.rst", "test_file.rst"], "titles": ["The documented BERT from Sebastian", "Welcome to Neural language processing (NLP)\u2019s documentation!", "Test file for sphinx"], "terms": {"bert": 1, "stand": [], "bidirect": [], "encod": [], "represent": [], "To": [], "put": [], "simpl": [], "word": [], "extract": [], "pattern": [], "from": 1, "data": [], "embed": [], "pass": [], "through": [], "an": [], "itself": [], "i": 0, "architectur": [], "stack": [], "togeth": [], "It": [], "which": [], "mean": [], "dure": [], "train": 0, "consid": [], "context": [], "both": [], "left": [], "right": [], "vocabulari": [], "achiev": [], "state": [], "art": [], "perform": [], "task": [], "like": [], "question": [], "answer": [], "natur": [], "infer": [], "classif": 0, "gener": [], "understand": [], "evalu": [], "glue": [], "accept": [], "2": [], "sentenc": [], "input": [], "more": [], "onli": [], "http": [], "mccormickml": [], "com": [], "2019": [], "05": [], "14": [], "tutori": [], "format": [], "entir": [], "program": [], "broken": [], "down": [], "4": [], "section": [], "preprocess": [], "build": [], "model": [], "loss": [], "optim": [], "sourc": [], "jalammar": [], "github": [], "io": [], "illustr": [], "refer": [], "follow": [], "were": [], "taken": [], "main": [], "neptun": [], "ai": [], "blog": [], "how": [], "code": [], "us": 0, "pytorch": [], "05_sphinx_test": 2, "20221022_test": 2, "print": 2, "in_text": [0, 2], "A": [0, 2], "sub": 2, "function": [], "someth": 2, "param": [], "text": [0, 2], "type": [0, 2], "str": [0, 2], "return": [0, 2], "rtype": [], "index": [0, 1], "modul": 1, "search": 1, "page": 1, "And": [], "here": [], "open": [], "topic": [], "rhe": [], "wewew": [], "toctre": [], "maxdepth": [], "5": [], "caption": [], "content": [], "instal": [], "support": [], "printing1": 2, "function1": 2, "paramet": [0, 2], "in_text2": 2, "test": [0, 1], "testenen": 2, "none": 2, "n": [], "some": [0, 2], "initi": [0, 2], "class": [], "10_annotated_bert": [], "20221022_transformer_bert": [], "encoderdecod": [], "decod": [], "src_emb": [], "tgt_emb": [], "standard": [], "base": 0, "thi": 0, "mani": [], "other": [], "intern": [], "share": [], "nn": [], "scriptmodul": [], "forward": [], "src": [], "tgt": [], "src_mask": [], "tgt_mask": [], "take": 0, "mask": 0, "target": [], "sequenc": 0, "d_model": [], "vocab": [], "defin": [], "linear": [], "softmax": [], "step": [], "x": 0, "comput": [], "everi": 0, "call": [], "should": [], "overridden": [], "all": 0, "subclass": [], "although": [], "recip": [], "need": [], "within": [], "one": 0, "instanc": [], "afterward": [], "instead": [], "sinc": [], "former": [], "care": [], "run": [], "regist": [], "hook": [], "while": [], "latter": [], "silent": [], "ignor": [], "them": [], "clone": [], "produc": [], "ident": [], "layer": [], "core": [], "each": 0, "turn": [], "layernorm": [], "featur": [], "ep": [], "1e": [], "06": [], "construct": [], "see": [], "citat": [], "detail": [], "sublayerconnect": [], "size": [], "dropout": [], "residu": [], "connect": [], "norm": [], "note": 0, "simplic": [], "first": 0, "oppos": [], "last": [], "sublay": [], "appli": [], "ani": [], "same": [], "encoderlay": [], "self_attn": [], "feed_forward": [], "made": [], "up": [], "self": [], "attn": [], "feed": [], "below": [], "figur": [], "memori": [], "decoderlay": [], "src_attn": [], "dummyoptim": [], "singl": 0, "updat": [], "closur": [], "callabl": [], "reevalu": [], "option": [], "most": [], "unless": [], "otherwis": [], "specifi": [], "modifi": [], "grad": [], "field": [], "zero_grad": [], "set_to_non": [], "fals": [], "set": [], "gradient": [], "torch": [], "tensor": [], "zero": [], "bool": [], "have": [], "lower": 0, "footprint": [], "can": [], "modestli": [], "improv": [], "howev": [], "chang": [], "certain": [], "behavior": [], "For": [], "exampl": [], "when": [], "user": [], "tri": [], "access": [], "manual": [], "op": [], "attribut": [], "full": [], "0": 0, "behav": [], "differ": [], "If": [], "request": [], "true": [], "backward": [], "ar": [], "guarante": [], "did": [], "receiv": [], "3": 0, "case": 0, "doe": [], "skip": [], "altogeth": [], "subsequent_mask": [], "out": 0, "subsequ": [], "posit": [], "multiheadedattent": [], "h": [], "number": 0, "head": [], "queri": [], "kei": [], "valu": [], "implement": [], "positionalencod": [], "max_len": [], "5000": [], "pe": [], "positionwisefeedforward": [], "d_ff": [], "ffn": [], "equat": [], "attent": [], "scale": [], "dot": [], "product": [], "make_model": [], "src_vocab": [], "tgt_vocab": [], "6": [], "512": [], "2048": [], "8": [], "helper": [], "hyperparamet": [], "batch": [], "pad": 0, "object": [], "hold": [], "static": [], "make_std_mask": [], "creat": 0, "hide": [], "futur": [], "labelsmooth": [], "padding_idx": [], "smooth": [], "label": [], "simplelosscomput": [], "criterion": [], "trainstat": [], "track": [], "token": 0, "data_gen": [], "v": [], "batch_siz": 0, "nbatch": [], "random": 0, "copi": [], "synthet": [], "rate": [], "model_s": [], "factor": [], "warmup": [], "we": 0, "default": [], "lambdalr": [], "avoid": [], "rais": [], "neg": [], "power": [], "run_epoch": [], "data_it": [], "loss_comput": [], "schedul": [], "mode": [], "accum_it": [], "train_stat": [], "epoch": [], "the_annotated_transform": [], "averag": [], "mtx2df": [], "m": [], "max_row": [], "max_col": [], "row_token": [], "col_token": [], "convert": 0, "dens": [], "matrix": [], "frame": [], "row": [], "column": [], "properti": [], "learn": [], "being": [], "xxx": 0, "anoth": [], "direct": [], "15_bert_exampl": 0, "training_exampl": 0, "generate_clean_sent": 0, "remov": 0, "punctuat": 0, "etc": [], "two": 0, "One": 0, "without": 0, "contain": 0, "uniqu": 0, "string": 0, "word_list": 0, "interv": 0, "sffsfsf": [], "1": 0, "box": 0, "make_batch": 0, "int": 0, "84": 0, "max_pr": 0, "maxlen": 0, "23": 0, "alia": [], "swmoeller": [], "python": [], "n_nlp": [], "py": [], "fulli": 0, "document": [], "sebastian": 1, "autumn": 0, "2022": 0, "annot": [], "transform": 0, "sphinx": [0, 1], "The": 1, "file": 1, "purpos": [], "approach": [], "eiw": 0, "wi": 0, "fsf": 0, "f": 0, "ssfsfsf": 0, "sfsf": 0, "list": [], "sdsdll": 0, "dsdlsdsd": 0, "dsld": 0, "loc_sent": 0, "line": 0, "loc_word_list": 0, "duplic": 0, "generate_dictionari": 0, "in_word_list": 0, "start": [], "dictionari": 0, "cl": 0, "alwai": 0, "sep": 0, "separ": 0, "end": 0, "truncat": 0, "equal": 0, "length": 0, "replac": 0, "origin": 0, "loc_word_dict": 0, "loc_number_dict": 0, "loc_vocab_s": 0, "dict": 0, "provid": 0, "relat": 0, "convert_sentence_into_token": 0, "in_sent": 0, "in_word_dict": 0, "its": 0, "specif": 0, "e": 0, "select": 0, "check": 0, "alreadi": 0, "add": 0, "special": 0, "repres": 0, "second": 0}, "objects": {"05_sphinx_test": [[2, 0, 0, "-", "20221022_test"]], "05_sphinx_test.20221022_test": [[2, 1, 1, "sphinx_test.20221022_test.printing", "printing"], [2, 1, 1, "sphinx_test.20221022_test.printing1", "printing1"]], "15_bert_example": [[0, 0, 0, "-", "training_example"]], "15_bert_example.training_example": [[0, 1, 1, "bert_example.training_example.convert_sentence_into_tokens", "convert_sentence_into_tokens"], [0, 1, 1, "bert_example.training_example.generate_clean_sentence", "generate_clean_sentence"], [0, 1, 1, "bert_example.training_example.generate_dictionary", "generate_dictionary"], [0, 1, 1, "bert_example.training_example.make_batch", "make_batch"], [0, 1, 1, "bert_example.training_example.random", "random"]]}, "objtypes": {"0": "py:module", "1": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"]}, "titleterms": {"welcom": 1, "neural": 1, "languag": 1, "process": 1, "nlp": 1, "": 1, "document": [0, 1], "purpos": [0, 2], "1": [], "The": 0, "transform": [], "concept": [], "indic": 1, "tabl": 1, "And": [], "here": [], "open": 1, "topic": 1, "list": [0, 1], "test": 2, "best": [], "us": 2, "function": 2, "content": [0, 1], "file": [0, 2], "sphinx": 2, "next": [], "chapter": [], "n": [], "annot": [], "class": 2, "own": [], "transfer": [], "origin": [], "bert": 0, "from": 0, "sebastian": 0, "approach": 0, "clean": 0, "sentenc": 0, "sdsdsdsd": 0, "gener": 0, "word": 0, "python": 0}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx": 57}, "alltitles": {"Purpose": [[2, "purpose"], [0, "purpose"]], "Used classes and functions": [[2, "used-classes-and-functions"]], "Test file for sphinx": [[2, "module-05_sphinx_test.20221022_test"]], "Welcome to Neural language processing (NLP)\u2019s documentation!": [[1, "welcome-to-neural-language-processing-nlp-s-documentation"]], "Table of content": [[1, null]], "List of open topics": [[1, "list-of-open-topics"]], "Indices and tables": [[1, "indices-and-tables"]], "The documented BERT from Sebastian": [[0, "the-documented-bert-from-sebastian"]], "Contents": [[0, "contents"]], "Approach": [[0, "approach"]], "Approach in python file": [[0, "approach-in-python-file"]], "Generate a list of words from cleaned sentences": [[0, "generate-a-list-of-words-from-cleaned-sentences"]], "sdsdsdsd": [[0, "sdsdsdsd"]]}, "indexentries": {"15_bert_example.training_example": [[0, "module-15_bert_example.training_example"]], "convert_sentence_into_tokens() (in module 15_bert_example.training_example)": [[0, "bert_example.training_example.convert_sentence_into_tokens"]], "generate_clean_sentence() (in module 15_bert_example.training_example)": [[0, "bert_example.training_example.generate_clean_sentence"]], "generate_dictionary() (in module 15_bert_example.training_example)": [[0, "bert_example.training_example.generate_dictionary"]], "make_batch() (in module 15_bert_example.training_example)": [[0, "bert_example.training_example.make_batch"]], "module": [[0, "module-15_bert_example.training_example"]], "random() (in module 15_bert_example.training_example)": [[0, "bert_example.training_example.random"]]}})